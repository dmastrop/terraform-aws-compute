# This .gitignore is for my course specifically. Keep in mind, you would also want to ignore 
# .tfvars and ALL security keys in production. Those are here only for the benefit of the course and are not in use. 
# Local .terraform directories
**/.terraform/*

# .tfstate files
**/*.tfstate
**/*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.

# Note that in this project we are using terraform.auto.tfvars and this needs to be pushed to the repo
# The .auto will be picked up by terraform cloud workspace and used accordingly. 
# We can use regex to block .tfvars and allow .auto.tfvars, but for simplicity for now we will push all .tfvars
# In production this would not be done....
#
#*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
